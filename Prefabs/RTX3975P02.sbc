<?xml version="1.0"?>
<Definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Prefabs>
    <Prefab xsi:type="MyObjectBuilder_PrefabDefinition">
      <Id Type="MyObjectBuilder_PrefabDefinition" Subtype="RTX3975P02" />
      <CubeGrids>
        <CubeGrid>
          <SubtypeName />
          <EntityId>96178408759667236</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="0" y="0" z="0" />
            <Forward x="-0.1676115" y="-0.847589135" z="0.503486454" />
            <Up x="0.0177381746" y="-0.5132216" z="-0.8580725" />
            <Orientation>
              <X>0.866372</X>
              <Y>-0.0338058472</Y>
              <Z>0.07752678</Z>
              <W>-0.492185235</W>
            </Orientation>
          </PositionAndOrientation>
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallBlockConveyor</SubtypeName>
              <EntityId>109191509565165590</EntityId>
              <Min x="0" y="2" z="2" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>121005202433056027</EntityId>
              <Min x="-1" y="2" z="3" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <CustomName>Gyroscope 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="1" z="2" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="1" z="2" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="0" z="2" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="0" z="2" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>GravDriveSmallSlow</SubtypeName>
              <EntityId>109472061854842926</EntityId>
              <Min x="-2" y="0" z="2" />
              <BlockOrientation Forward="Right" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <CustomName>GravDriveSmallSlow</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>GravDriveSmallSlow</SubtypeName>
              <EntityId>136707046173368150</EntityId>
              <Min x="2" y="0" z="2" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <CustomName>GravDriveSmallSlow 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallAtmosphericHoverEngine_SmallBlock</SubtypeName>
              <EntityId>95894917711179391</EntityId>
              <Min x="-2" y="0" z="1" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponentBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value xsi:type="xsd:string">dont_change_this_please  : |height_target_min:5.0|altituderange:5|altituderegdist:4|aligntogravity_btn:True|force_to_centerofmass_btn:False|color1:0:255:0|</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>HoverEngineSmallMil 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallAtmosphericHoverEngine_SmallBlock</SubtypeName>
              <EntityId>82705042772447682</EntityId>
              <Min x="2" y="0" z="1" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponentBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value xsi:type="xsd:string">dont_change_this_please  : |height_target_min:5.0|altituderange:5|altituderegdist:4|aligntogravity_btn:True|force_to_centerofmass_btn:False|color1:0:255:0|</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>HoverEngineSmallMil</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>141217978168594428</EntityId>
              <Min x="0" y="2" z="3" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <CustomName>Timer Block</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Run</Action>
                      <Parameters>
                        <MyObjectBuilder_ToolbarItemActionParameter>
                          <TypeCode>String</TypeCode>
                          <Value />
                        </MyObjectBuilder_ToolbarItemActionParameter>
                      </Parameters>
                      <BlockEntityId>134533464905926731</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Start</Action>
                      <BlockEntityId>141217978168594428</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
              </Toolbar>
              <JustTriggered>true</JustTriggered>
              <Delay>1000</Delay>
              <CurrentTime>1000</CurrentTime>
              <IsCountingDown>true</IsCountingDown>
              <Silent>true</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RemoteControl">
              <SubtypeName>SmallBlockRemoteControl</SubtypeName>
              <EntityId>140531836339769911</EntityId>
              <Min x="0" y="3" z="3" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <CustomName>Remote Control 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
              </BuildToolbar>
              <PreviousControlledEntityId xsi:nil="true" />
              <AutoPilotEnabled>false</AutoPilotEnabled>
              <FlightMode>2</FlightMode>
              <BindedCamera>0</BindedCamera>
              <CurrentWaypointIndex>-1</CurrentWaypointIndex>
              <Waypoints />
              <Direction>0</Direction>
              <DockingModeEnabled>false</DockingModeEnabled>
              <CollisionAvoidance>false</CollisionAvoidance>
              <Coords />
              <Names />
              <WaypointThresholdDistance>100</WaypointThresholdDistance>
              <IsMainRemoteControl>false</IsMainRemoteControl>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RadioAntenna">
              <SubtypeName>SmallBlockRadioAntenna</SubtypeName>
              <EntityId>110949894908086700</EntityId>
              <Min x="0" y="0" z="3" />
              <BlockOrientation Forward="Down" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <CustomName>RTX3975P</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <BroadcastRadius>500</BroadcastRadius>
              <ShowShipName>false</ShowShipName>
              <EnableBroadcasting>true</EnableBroadcasting>
              <AttachedPB>134533464905926731</AttachedPB>
              <IgnoreAllied>false</IgnoreAllied>
              <IgnoreOther>false</IgnoreOther>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Gyro">
              <SubtypeName>SmallBlockGyro</SubtypeName>
              <EntityId>120512019317142970</EntityId>
              <Min x="1" y="2" z="3" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <CustomName>Gyroscope 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>84752079123236792</EntityId>
              <Min x="0" y="1" z="2" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>49.980369</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>49.980369</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>92671411866314996</EntityId>
              <Min x="1" y="2" z="2" />
              <BlockOrientation Forward="Left" Up="Down" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>49.980592</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>49.980592</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>131313402245227611</EntityId>
              <Min x="-1" y="2" z="2" />
              <BlockOrientation Forward="Right" Up="Down" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>49.983788</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 5</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>49.983788</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>SmallProgrammableBlock</SubtypeName>
              <EntityId>134533464905926731</EntityId>
              <Min x="0" y="0" z="2" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <CustomName>Programmable block 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>        		List&lt;IMyTerminalBlock&gt; list = new List&lt;IMyTerminalBlock&gt;();

        List&lt;long&gt; GetAllEnemyGrids(string specificFaction = "None", double distanceToCheck = 5000)
			{

				try
				{

					Me.CustomData = specificFaction + "\n" + distanceToCheck.ToString();
					return Me.GetValue&lt;List&lt;long&gt;&gt;("NpcExtender-GetAllEnemies");

				}
				catch (Exception exc)
				{

					Echo("NpcExtender-GetAllEnemy Hard Fail");
					return new List&lt;long&gt;();

				}

			}
        Vector3D GetTrackedEntityPosition(long entityId)
			{

				try
				{

					Me.CustomData = entityId.ToString();
					return Me.GetValue&lt;Vector3D&gt;("NpcExtender-TrackEntity");

				}
				catch (Exception exc)
				{

					return new Vector3D(0, 0, 0);

				}
			}
        MyDetectedEntityInfo GetMDEI(long entityId)
			{

				try
				{

					Me.CustomData = entityId.ToString();
					return Me.GetValue&lt;MyDetectedEntityInfo&gt;("NpcExtender-GetDetectedEntityInfo");

				}
				catch (Exception exc)
				{

					Echo("Hard fail NpcExtender-GetDetectedEntityInfo");
					return new MyDetectedEntityInfo();

				}

			}
		
		public List&lt;Vector3D&gt; GenerateCircularPoints(Vector3D vec, int points, double radius)
        {
			vecList.Clear();
			Vector3D gravity = new Vector3D(0, 0, 0);
			Vector3D Gravity = new Vector3D(0, 0, 0);
            GridTerminalSystem.GetBlocksOfType&lt;IMyRemoteControl&gt;(list);
            var remote = list[0] as IMyRemoteControl;
            gravity = remote.GetNaturalGravity();
			Gravity = Vector3D.Normalize(gravity);
            
			double incrementAngle = (MathHelper.TwoPi / points);

            MatrixD rotationMatrix = MatrixD.CreateFromAxisAngle(Gravity, incrementAngle);

            Vector3D tangent = Vector3D.CalculatePerpendicularVector(Gravity) * radius;

            for (int i = 0; i &lt; points; i++)
            {
                tangent = Vector3D.TransformNormal(tangent, rotationMatrix);
                vecList.Add(tangent + vec);
            }
			//vecList.RemoveRange(0, 60);
            return vecList;
        }
		
		
		
        bool receivedBroadcast = false;
        bool success = false;
        bool combatZero = false;
        bool SAR = false;
        float tango = 0;
        double tangoPOS = 1;
        float ping = 15;
        float signalTimer = 0;
        float FlankChance = 0;
        List&lt;Vector3D&gt; vecList = new List&lt;Vector3D&gt;();
        long EntityId = 0;
        List&lt;long&gt; targets = new List&lt;long&gt;();
        readonly Random rnd = new Random();
        readonly Random rndDistance = new Random();
        readonly Random diceRoll = new Random();
        Vector3D TargetV3D = new Vector3D(0, 0, 0);
        Vector3D targetVector = new Vector3D(0, 0, 0);
        string OUT = "";
        string TGT = "";
        string KEY = "";
        string Key = "";
        string Protocol = "";
        string KeyStore = "";

        public void Main(string argument)
        {
            string Ping = ping.ToString("G");
            ping++;
            Echo("Last Ping " + Ping);
            Echo("Protocol: " + Protocol);
            if (success)
            {
                Echo("Signal Established");
            }
            if (!success &amp;&amp; ping &gt; 17)
            {
                if (Key != "")
                {
                    KeyStore = Key;
                    Key = "";
                    KEY = "";
                    Storage = "";
                }
                else
                {
                    string[] DATA = Storage.Split('*');
                    if (DATA.Length &gt; 1)
                    {
                        Key = DATA[1];
                        KeyStore = Key;
                        Key = "";
                        KEY = "";
                        Storage = "";
                    }
                }
            }

            if (argument.Contains("CKR2C") == true &amp;&amp; argument.Contains("*5503") == true)
            {
                string[] INFO = argument.Split('*');
                if (INFO.Length &gt; 1 &amp;&amp; signalTimer &lt;= 1)
                {
                    Vector3D.TryParse(INFO[0], out TargetV3D);
                    if (KEY == "" || KEY == INFO[1] || KeyStore == INFO[1])
                    {
                        Key = INFO[1];
                        KEY = Key;
                        TGT = TargetV3D.ToString();
                        OUT = string.Join("*", TGT ?? "", KEY, KeyStore);
                        Storage = OUT;
                        receivedBroadcast = true;
                        ping = 0;
                        Protocol = "5503";
                    }
                }
            }

            if (argument.Contains("CKR2C") == true &amp;&amp; argument.Contains("*5521") == true)
            {
                string[] INFO = argument.Split('*');
                if (INFO.Length &gt; 1 &amp;&amp; signalTimer &lt;= 1)
                {
                    Vector3D.TryParse(INFO[0], out TargetV3D);
                    if (KEY == "" || KEY == INFO[1] || KeyStore == INFO[1])
                    {
                        Key = INFO[1];
                        KEY = Key;
                        TGT = TargetV3D.ToString();
                        OUT = string.Join("*", TGT ?? "", KEY, KeyStore);
                        Storage = OUT;
                        receivedBroadcast = true;
                        ping = 0;
                        Protocol = "5521";
                    }
                }
            }

            if (argument.Contains("CKR2C") == true &amp;&amp; argument.Contains("*2196") == true)
            {
                string[] INFO = argument.Split('*');
                if (INFO.Length &gt; 1)
                {
                    if (KEY == INFO[1] || KeyStore == INFO[1])
                    {
                        OUT = string.Join("*", TGT ?? "", KEY, KeyStore);
                        receivedBroadcast = true;
                        ping = 0;
                        Protocol = "ERROR";
                        List&lt;IMyBatteryBlock&gt; Batteries = new List&lt;IMyBatteryBlock&gt;();
                        List&lt;IMyReactor&gt; Reactors = new List&lt;IMyReactor&gt;();
                        GridTerminalSystem.GetBlocksOfType&lt;IMyBatteryBlock&gt;(Batteries);
                        GridTerminalSystem.GetBlocksOfType&lt;IMyReactor&gt;(Reactors);
                        foreach (var item in Batteries)
                        {
                            int disableChance = diceRoll.Next(0, 6);
                            if (disableChance &gt; 5)
                            {
                                IMyBatteryBlock Battery = (item as IMyBatteryBlock);
                                Battery.ApplyAction("OnOff_Off");
                            }
                        }
                        foreach (var item in Reactors)
                        {
                            int disableChance = diceRoll.Next(0, 6);
                            if (disableChance &gt; 3)
                            {
                                IMyReactor Reactor = (item as IMyReactor);
                                Reactor.ApplyAction("OnOff_Off");
                            }
                        }
                    }
                }
            }

            if (argument.Contains("CKR2C") == true &amp;&amp; argument.Contains("*2197") == true)
            {
                combatZero = true;
                receivedBroadcast = true;
                ping = 0;
                Protocol = "2197";
                List&lt;IMyBatteryBlock&gt; Batteries = new List&lt;IMyBatteryBlock&gt;();
                List&lt;IMyReactor&gt; Reactors = new List&lt;IMyReactor&gt;();
                GridTerminalSystem.GetBlocksOfType&lt;IMyBatteryBlock&gt;(Batteries);
                GridTerminalSystem.GetBlocksOfType&lt;IMyReactor&gt;(Reactors);
                foreach (var item in Batteries)
                {
                    IMyBatteryBlock Battery = (item as IMyBatteryBlock);
                    Battery.ApplyAction("OnOff_On");
                }
                foreach (var item in Reactors)
                {
                    IMyReactor Reactor = (item as IMyReactor);
                    Reactor.ApplyAction("OnOff_On");
                }
            }

            if (combatZero)
            {
                KEY = "";
                Key = "";
                KeyStore = "";
            }

            if (receivedBroadcast &amp;&amp; signalTimer &lt;= 0)
            {
                signalTimer = 10;
                receivedBroadcast = false;
                if (TGT != "")
                {
                    GridTerminalSystem.GetBlocksOfType&lt;IMyRemoteControl&gt;(list);
                    var remote = list[0] as IMyRemoteControl;
                    GridTerminalSystem.GetBlocksOfType&lt;IMyUserControllableGun&gt;(list);
                    if (list.Count &gt; 0)
                        {
                            var myPOS = Me.GetPosition();
							success = true;
							FlankChance = diceRoll.Next(1, 6);
                            if (Vector3D.DistanceSquared(TargetV3D, myPOS) &lt; 1200 * 1200)
								{
                                    if (FlankChance &gt;= 5)
                                    {
										remote.ClearWaypoints();
                                        remote.AddWaypoint((myPOS - myPOS + TargetV3D) / 1.5, "Flank A");
                                        remote.ApplyAction("CollisionAvoidance_On");
                                        remote.SetAutoPilotEnabled(true);
										tangoPOS = 3;
                                    }
                                    else if (FlankChance &lt;= 2)
                                    {
										remote.ClearWaypoints();
                                        remote.AddWaypoint(myPOS + myPOS - TargetV3D, "Flank B");
                                        remote.ApplyAction("CollisionAvoidance_On");
                                        remote.SetAutoPilotEnabled(true);
										tangoPOS = 3;
                                    }
                                    else
                                    {
										GenerateCircularPoints(TargetV3D, 8, 400);
										remote.ClearWaypoints();
										foreach (var point in vecList)
											{
												remote.AddWaypoint(point, "Encircle");
												tangoPOS = (tangoPOS + 4);
											}
										remote.ApplyAction("CollisionAvoidance_On");
                                        remote.SetAutoPilotEnabled(true);
                                    }
									
                                }
                                else if (Vector3D.DistanceSquared(TargetV3D, myPOS) &gt; 1200 * 1200)
                                {
									remote.ClearWaypoints();
                                    remote.AddWaypoint(TargetV3D, "Target -- Zero Deviation");
                                    remote.ApplyAction("CollisionAvoidance_On");
                                    remote.SetAutoPilotEnabled(true);
									tangoPOS = 5;
                                }
                        }
                            else
                            {
                                remote.ClearWaypoints();
                                remote.AddWaypoint(TargetV3D, "Ramming Speed");
                                remote.ApplyAction("CollisionAvoidance_Off");
                                remote.SetAutoPilotEnabled(true);
                            }
                }
            }
            else
            {
                signalTimer--;
            }

            //-------AUTONOMOUS LOGIC FOLLOWS--------//

            if (!receivedBroadcast &amp;&amp; ping &gt;= 15)
            {
                success = false;
                Protocol = "2198";
                if (SAR)
                {
                    GridTerminalSystem.GetBlocksOfType&lt;IMyRemoteControl&gt;(list);
                    if (list.Count &gt; 0)
                    {
                        var remote = list[0] as IMyRemoteControl;
                        string[] INFO = Storage.Split('*');
                        if (INFO.Length &gt; 1)
                        {
                            Vector3D.TryParse(INFO[4], out TargetV3D);
                            remote.ClearWaypoints();
                            remote.AddWaypoint(TargetV3D, "Target");
                            remote.ApplyAction("CollisionAvoidance_On");
                            remote.SetAutoPilotEnabled(true);
                        }
                    }
                }
                if (tango == 0)
                {
                    GridTerminalSystem.GetBlocksOfType&lt;IMyRemoteControl&gt;(list);
                    if (list.Count &gt; 0)
                    {
                        var remote = list[0] as IMyRemoteControl;
                        int statusCheck = diceRoll.Next(0, 6);
                        if (statusCheck &lt;= 4)
                        {
                            targets = GetAllEnemyGrids();
                            if (targets.Count &gt; 0)
                            {
                                EntityId = targets[rnd.Next(0, targets.Count)];
                                tango = (tango + 120);
                            }
                            else if (targets.Count == 0)
                            {
                                tango = (tango + 50);
                                targetVector = Me.GetPosition();
                                TGT = targetVector.ToString();
                                OUT = string.Join("*", TGT ?? "", KEY, KeyStore);
                                Storage = OUT;
                                remote.ClearWaypoints();
                                int distanceModifier = rndDistance.Next(-120, 120);
                                remote.AddWaypoint(targetVector + distanceModifier, "Patrol");
                                remote.ApplyAction("CollisionAvoidance_On");
                                remote.SetAutoPilotEnabled(true);
                            }
                        }
                        else if (statusCheck &gt;= 5)
                        {
                            SAR = true;
                            tango = (tango + 300);
                        }
                    }
                }
                else
                {
                    tango--;
                    tangoPOS--;
                    if (tangoPOS &lt;= 0)
                    {
                        GridTerminalSystem.GetBlocksOfType&lt;IMyRemoteControl&gt;(list);
                        targetVector = GetTrackedEntityPosition(EntityId);
                        TGT = targetVector.ToString();
                        OUT = string.Join("*", TGT ?? "", KEY, KeyStore);
                        Storage = OUT;
                        tangoPOS = 0;
                        if (list.Count &gt; 0)
                        {
                            var remote = list[0] as IMyRemoteControl;
                            GridTerminalSystem.GetBlocksOfType&lt;IMyUserControllableGun&gt;(list);
                            if (list.Count &gt; 0)
                            {
                                var myPOS = Me.GetPosition();
								FlankChance = diceRoll.Next(1, 6);
                                if (Vector3D.DistanceSquared(targetVector, myPOS) &lt; 1200 * 1200)
                                {
                                    if (FlankChance &gt;= 5)
                                    {
										remote.ClearWaypoints();
                                        remote.AddWaypoint((myPOS - myPOS + targetVector) / 1.5, "Flank A");
                                        remote.ApplyAction("CollisionAvoidance_On");
                                        remote.SetAutoPilotEnabled(true);
										tangoPOS = 3;
                                    }
                                    else if (FlankChance &lt;= 2)
                                    {
										remote.ClearWaypoints();
                                        remote.AddWaypoint(myPOS + myPOS - targetVector, "Flank B");
                                        remote.ApplyAction("CollisionAvoidance_On");
                                        remote.SetAutoPilotEnabled(true);
										tangoPOS = 3;
                                    }
                                    else
                                    {
										GenerateCircularPoints(targetVector, 8, 400);
										remote.ClearWaypoints();
										foreach (var point in vecList)
											{
												remote.AddWaypoint(point, "Encircle");
												tangoPOS = (tangoPOS + 4);
											}
										remote.ApplyAction("CollisionAvoidance_On");
                                        remote.SetAutoPilotEnabled(true);
                                    }
									
                                }
                                else if (Vector3D.DistanceSquared(targetVector, myPOS) &gt; 1200 * 1200)
                                {
									remote.ClearWaypoints();
                                    remote.AddWaypoint(targetVector, "Target -- Zero Deviation");
                                    remote.ApplyAction("CollisionAvoidance_On");
                                    remote.SetAutoPilotEnabled(true);
									tangoPOS = 5;
                                }
                            }
                            else
                            {
                                remote.ClearWaypoints();
                                remote.AddWaypoint(targetVector, "Ramming Speed");
                                remote.ApplyAction("CollisionAvoidance_Off");
                                remote.SetAutoPilotEnabled(true);
                            }
                        }
                    }
                }
            }
        }</Program>
              <Storage />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Reactor">
              <SubtypeName>SmallBlockSmallGenerator</SubtypeName>
              <EntityId>99596397208181310</EntityId>
              <Min x="0" y="3" z="2" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>49.98916</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                            <SubtypeName>Uranium</SubtypeName>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.125</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Small Reactor 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>49.98916</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_Ingot">
                      <SubtypeName>Uranium</SubtypeName>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.125</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="3" z="2" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="3" z="2" />
              <BlockOrientation Forward="Up" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="-1" y="4" z="2" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallBlockArmorSlope</SubtypeName>
              <Min x="1" y="4" z="2" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>GravDriveSmallSlow</SubtypeName>
              <EntityId>138715650438782885</EntityId>
              <Min x="-2" y="4" z="2" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <CustomName>GravDriveSmallSlow 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>GravDriveSmallSlow</SubtypeName>
              <EntityId>97407986464199132</EntityId>
              <Min x="2" y="4" z="2" />
              <BlockOrientation Forward="Up" Up="Left" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <CustomName>GravDriveSmallSlow 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallAtmosphericHoverEngine_SmallBlock</SubtypeName>
              <EntityId>140373626891000043</EntityId>
              <Min x="2" y="4" z="1" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponentBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value xsi:type="xsd:string">dont_change_this_please  : |height_target_min:5.0|altituderange:5|altituderegdist:4|aligntogravity_btn:True|force_to_centerofmass_btn:False|color1:0:255:0|</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>HoverEngineSmallMil 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Thrust">
              <SubtypeName>SmallAtmosphericHoverEngine_SmallBlock</SubtypeName>
              <EntityId>101306364137373173</EntityId>
              <Min x="-2" y="4" z="1" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponentBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value xsi:type="xsd:string">dont_change_this_please  : |height_target_min:5.0|altituderange:5|altituderegdist:4|aligntogravity_btn:True|force_to_centerofmass_btn:False|color1:0:255:0|</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>HoverEngineSmallMil 4</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorTurret">
              <SubtypeName>CythonSmallBlockSmallPlasmaTurretC3</SubtypeName>
              <EntityId>112901200941420230</EntityId>
              <Min x="0" y="4" z="2" />
              <ColorMaskHSV x="0" y="-0.96" z="-0.5" />
              
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items>
                        <MyObjectBuilder_InventoryItem>
                          <Amount>1</Amount>
                          <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                            <SubtypeName>Class3PlasmaGunCharge</SubtypeName>
                            <ProjectilesCount>0</ProjectilesCount>
                          </PhysicalContent>
                          <ItemId>0</ItemId>
                        </MyObjectBuilder_InventoryItem>
                      </Items>
                      <nextItemId>1</nextItemId>
                      <Volume>0.384</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>SG Small Blaster Turret</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <IsShooting>false</IsShooting>
              <IsShootingFromTerminal>false</IsShootingFromTerminal>
              <IsLargeTurret>true</IsLargeTurret>
              <MinFov>0.1</MinFov>
              <MaxFov>1.04719758</MaxFov>
              <Inventory>
                <Items>
                  <MyObjectBuilder_InventoryItem>
                    <Amount>1</Amount>
                    <PhysicalContent xsi:type="MyObjectBuilder_AmmoMagazine">
                      <SubtypeName>Class3PlasmaGunCharge</SubtypeName>
                      <ProjectilesCount>0</ProjectilesCount>
                    </PhysicalContent>
                    <ItemId>0</ItemId>
                  </MyObjectBuilder_InventoryItem>
                </Items>
                <nextItemId>1</nextItemId>
                <Volume>0.384</Volume>
                <Mass>9223372036854.775807</Mass>
                <MaxItemCount>2147483647</MaxItemCount>
                <Size xsi:nil="true" />
                <InventoryFlags>CanReceive</InventoryFlags>
                <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
              </Inventory>
			  <Range>3000</Range>
              <RemainingAmmo>0</RemainingAmmo>
              <Target>0</Target>
              <IsPotentialTarget>true</IsPotentialTarget>
              <PreviousControlledEntityId xsi:nil="true" />
              <Rotation>0</Rotation>
              <Elevation>0</Elevation>
              <GunBase>
                <CurrentAmmoMagazineName>Class3PlasmaGunCharge</CurrentAmmoMagazineName>
                <RemainingAmmosList />
                <LastShootTime>0</LastShootTime>
              </GunBase>
              <EnableIdleRotation>false</EnableIdleRotation>
              <PreviousIdleRotationState>true</PreviousIdleRotationState>
              <TargetCharacters>true</TargetCharacters>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <LinearVelocity x="-0.00018693856" y="-0.0009453235" z="0.0005615428" />
          <AngularVelocity x="7.55208239E-05" y="0.000573317753" z="0.000990271" />
          <XMirroxPlane x="0" y="2" z="0" />
          <ConveyorLines>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="2" z="2" />
              <StartDirection>Right</StartDirection>
              <EndPosition x="1" y="2" z="2" />
              <EndDirection>Left</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="2" z="2" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-1" y="2" z="2" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="2" z="2" />
              <StartDirection>Down</StartDirection>
              <EndPosition x="0" y="1" z="2" />
              <EndDirection>Up</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="2" z="2" />
              <StartDirection>Up</StartDirection>
              <EndPosition x="0" y="3" z="2" />
              <EndDirection>Down</EndDirection>
              <Sections />
              <ConveyorLineType>SMALL_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
          </ConveyorLines>
          <DisplayName>RTX3975P02</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <CreatePhysics>false</CreatePhysics>
          <EnableSmallToLargeConnections>false</EnableSmallToLargeConnections>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
      </CubeGrids>
    </Prefab>
  </Prefabs>
</Definitions>